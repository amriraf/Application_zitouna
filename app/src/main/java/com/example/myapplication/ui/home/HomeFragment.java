package com.example.myapplication.ui.home;import android.graphics.Color;import android.os.Build;import android.os.Bundle;import android.text.SpannableString;import android.text.style.UnderlineSpan;import android.view.LayoutInflater;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import androidx.annotation.Nullable;import androidx.annotation.NonNull;import androidx.fragment.app.Fragment;import androidx.fragment.app.FragmentManager;import androidx.fragment.app.FragmentTransaction;import androidx.lifecycle.Observer;import androidx.lifecycle.ViewModelProviders;import com.example.myapplication.R;import com.example.myapplication.SliderAdapterExample;import com.example.myapplication.models.SliderItem;import com.example.myapplication.ui.LoginActivity;import com.example.myapplication.ui.TachesFragment;import com.example.myapplication.ui.TasksFragment;import com.example.myapplication.ui.gallery.GalleryFragment;import com.example.myapplication.ui.share.ShareFragment;import com.example.myapplication.ui.slideshow.SlideshowFragment;import com.google.android.material.bottomnavigation.BottomNavigationView;import com.smarteist.autoimageslider.IndicatorAnimations;import com.smarteist.autoimageslider.SliderAnimations;import com.smarteist.autoimageslider.SliderView;import java.util.ArrayList;import java.util.List;public class HomeFragment extends Fragment {    private HomeViewModel homeViewModel;    SliderView sliderView;    private SliderAdapterExample adapter;    View root;    public View onCreateView(@NonNull LayoutInflater inflater,                             ViewGroup container, Bundle savedInstanceState) {        homeViewModel =                ViewModelProviders.of(this).get(HomeViewModel.class);        root = inflater.inflate(R.layout.fragment_home, container, false);        /*BottomNavigationView bottomNavigationView = (BottomNavigationView) root.findViewById(R.id.BottomNavigationView_home);        final String role1 = LoginActivity.role1;        if (role1.equals("admin")){            bottomNavigationView.getMenu().findItem(R.id.parametrage).setTitle( "Paramètres");        }else if (role1.equals("agent")){            bottomNavigationView.getMenu().findItem(R.id.parametrage).setTitle( "Tâches");            bottomNavigationView.getMenu().findItem(R.id.parametrage).setIcon(R.drawable.ic_description_white_24dp);        }            bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener()  {                @Override                public boolean onNavigationItemSelected(@NonNull MenuItem item) {                    Fragment fragment = null;                    switch (item.getItemId()) {                        case R.id.nav_home:                            fragment = new HomeFragment();                            break;                        case R.id.nav_gallery:                            fragment = new GalleryFragment();                            break;                        case R.id.nav_share:                            fragment = new ShareFragment();                            break;                        case R.id.nav_slideshow:                            fragment = new SlideshowFragment();                            break;                        case R.id.parametrage:                           if (role1.equals("admin")){                               fragment= new TasksFragment();                               break;                           }                           else if (role1.equals("agent")){                               fragment= new TachesFragment();                               break;                           }                    }                    getFragmentManager().beginTransaction().replace(R.id.home_fragement,fragment).commit();                    return true;                }            });*/        return root;    }    @Override    public void onActivityCreated(@Nullable Bundle savedInstanceState) {        super.onActivityCreated(savedInstanceState);        sliderView = root.findViewById(R.id.imageSlider);        adapter = new SliderAdapterExample(getActivity());        sliderView.setSliderAdapter(adapter);        renewItems(null);        sliderView.setIndicatorAnimation(IndicatorAnimations.SLIDE); //set indicator animation by using SliderLayout.IndicatorAnimations. :WORM or THIN_WORM or COLOR or DROP or FILL or NONE or SCALE or SCALE_DOWN or SLIDE and SWAP!!        sliderView.setSliderTransformAnimation(SliderAnimations.SIMPLETRANSFORMATION);        sliderView.setAutoCycleDirection(SliderView.AUTO_CYCLE_DIRECTION_BACK_AND_FORTH);        sliderView.setIndicatorSelectedColor(Color.WHITE);        sliderView.setIndicatorUnselectedColor(Color.GRAY);        sliderView.setScrollTimeInSec(3);        sliderView.setAutoCycle(true);        sliderView.startAutoCycle();    }    public void renewItems(View view) {        List<SliderItem> sliderItemList = new ArrayList<>();        SliderItem sliderItem = new SliderItem();        //sliderItem.setDescription("Slider Item 1");        sliderItem.setLocalImage(R.drawable.mdcz);        sliderItemList.add(sliderItem);        sliderItem = new SliderItem();        //sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.abc);        sliderItemList.add(sliderItem);        //dummy data        sliderItem = new SliderItem();        //sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.pmlki);        sliderItemList.add(sliderItem);        sliderItem = new SliderItem();        //  sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.rv);        sliderItemList.add(sliderItem);        sliderItem = new SliderItem();        // sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.tb);        sliderItemList.add(sliderItem);        sliderItem = new SliderItem();        //  sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.un);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        //sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.yn);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        // sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.zx);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        //sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.aw);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        //  sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.azer);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        //  sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.ec);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        // sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.png);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        // sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.fggsa);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        // sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.fvcd);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        // sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.is);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        //   sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.iu);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        // sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.ok);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);        sliderItem = new SliderItem();        //  sliderItem.setDescription("Slider Item 2");        sliderItem.setLocalImage(R.drawable.lm);        sliderItemList.add(sliderItem);        adapter.renewItems(sliderItemList);    }}